1.git指令
 1）git仓库的状态与区域
      3个区域
        工作区:工作的区域，我门用于写作代码的空间
        暂存区
        当前HEAD指向的分支:
      4个状态
        1.unmodified:工作区一级暂停区中没有任何需要提交的修改，工作区很干净
        2.untracked:仓库中有新建的文件，但是还是没有提交过，没有被纳入到git的控制之中。 
        3.modified:有文件被修改，但是还没有被提交到暂停区
        4.staged:工作区的修改已经被提交到暂停区，即:已经执行过git add 命令，正在等待被提交到master上
  2）撤销修改
      1.撤销工作区的修改
        git checkout -- 文件名
        文件修改以后，没有被执行git add 指令
      2.撤销暂停区的修改
        文件已经被修改，并且执行过git add，但是还没有git commit
          分两步:
            撤销暂存区操作:
              git reset HEAD 文件名
            撤销工作区的修改
              git checkout -- 文件名
      3.撤销master的修改
        无法撤销，可以通过版本回退的方式
        撤销前，先查看提交的id，确定需要回退到那个版本
        git reset --hard 提交的id
  3）查看提交信息/存盘点
      git log
        如果查询到提交过多，无法一次性全部显示，可以按shift+q提前结束
      git log --pretty=oneline
练习:
  1.在d盘下新建test文件夹,初始化本地仓库
  2.新建文件1.txt，提交
  3.修改1.txt的内容，查看仓库的状态有什么变化，并提交
  4.新建文件2.txt，查看仓库的变化，提交
  5.修改2.txt内容，提交
  6.修改1.txt内容，查看状态，撤销1.txt的修改
  7.修改2.txt内容，并提交到暂停区，查看状态后，撤销2.txt的修改
  8.修改1.txt，2.txt的内容，然后提交，add、commit
  9.查看提交的信息，存盘点
  10.将仓库的内容退回到第4步


  4）关于存盘点(HEAD)
    实现版本的控制
      git中把每一次的提交都会串成一条时间线，这个时间线就是一条分支，默认只有一条分支，master，也称之为主分支。
      而HEAD指向的就是当前分支。
  5）分支
    1.创建分支
      git branch 分支名
      将当前所在的分支复制一条新的分支出来
